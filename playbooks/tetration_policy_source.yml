#!/usr/bin/ansible-playbook
---
#
#      Copyright (c) 2020 World Wide Technology, LLC
#      All rights reserved.
#
#      author: Joel W. King, World Wide Technology
#
#      Retrieve policy from Tetration and publish it to the PSM
#
#      usage: ./tetration_policy_source.yml -v --tags tetration
#                                              --skip-tags debug
#
#  
- hosts: localhost
  gather_facts: no
  connection: local

  vars_files:
    #
    #  Credentials for PSM defined in vaulted file
    #
    - /home/administrator/ansible/playbooks/files/passwords.yml

  vars:
    api_credentials: /home/administrator/ansible/playbooks/files/tetration/api_credentials.json

    #
    #   Variables for manipulating data format from Tetraion
    #
    acl_action: {"ALLOW": "permit", "DROP": "deny"}
    acl_protocol: {1: "icmp", 6: "tcp", 17 : "udp"}
    pseudo_acl: []
    l4_params: []

  collections:
    - joelwking.pensando

  module_defaults:
    network_security_policy:
      hostname: '{{ pensando_psm.host }}'
      username: '{{ pensando_psm.username }}'
      password: '{{ pensando_psm.password }}'
      api_version: v1
      tenant: default
      namespace: default

  tasks:
    - name: Query policy using the API via Tetration Application module
      tetration_application:
        application: 'PolicyPubApp'
        version: v11
        api_host: '{{ atc_tetration.host }}'
        api_cfile: '{{ api_credentials }}'
        api_verify: False
      register: api
      tags: [tetration]

    - name: TODO Manipulate the data from Tetration in this playbook
      block: 
        - debug:
            msg: '{{ item.l4_params }}'
          loop: '{{ api.ansible_facts.adm.raw.default_policies }}'
          tags: [tetration, debug]

          # Each item contains:
          # {u'l4_params': 
          #   [{u'confidence': 0.81, u'approved': False, u'proto': 1}, 
          #   {u'confidence': 0.97, u'proto': 17, u'approved': False, u'port': [53, 53]}, 
          #   {u'confidence': 0.99, u'proto': 17, u'approved': False, u'port': [123, 123]}, 
          #   {u'confidence': 0.96, u'proto': 6, u'approved': False, u'port': [80, 80]}, 
          #   {u'confidence': 1.0, u'proto': 6, u'approved': False, u'port': [443, 443]}, 
          #   {u'confidence': 0.97, u'proto': 6, u'approved': False, u'port': [5660, 5660]}], 
          # u'__internal_security_posture': 2.0, u'consumer_filter_id': u'5d936e14755f026b380a4247', 
          # u'provider_filter_name': u'EPG-DEV-PUBWIN1', u'priority': 100, u'__internal_src_risk_exposure': 2.0, 
          # u'consumer_filter_name': u'Default:cluster', 
          # u'action': u'ALLOW', u'provider_filter_id': u'5bcf5c99755f025b0a919850', 
          # u'__internal_dst_risk_exposure': 1.0}

        - name: Build l4_params 
          set_fact:
            l4_params: "{{ l4_params + item.l4_params  }}"             # Extend the list
          loop: '{{ api.ansible_facts.adm.raw.default_policies }}'

        - name: Create pseudo_acl
          set_fact:
            pseudo_acl: "{{ pseudo_acl + [ {'action': action, 'from-ip-addresses': from_ip_addresses, 'to-ip-addresses': to_ip_addresses, 'proto-ports': proto_ports} ] }}"
          vars:
            action: permit
            from_ip_addresses: ['0.0.0.0/0']                          # TODO
            to_ip_addresses: ['0.0.0.0/0']                            #  TODO
            proto_ports: ["{{ {'protocol': acl_protocol[item.proto], 'ports': item.port[0] | string} }}"]
          loop: '{{ l4_params }}'
          when: acl_protocol[item.proto] != 'icmp'                    # ICMP cannot specify ports, ignore  TODO

          #
          # TODO Update not yet implemented, delete if it currently exists
          #
        - name: Delete Policy  
          network_security_policy:
              state: absent
              policy_name: tetration

    - name: Add a network_security_policy
      network_security_policy:
          state: present
          policy_name: tetration
          rules: '{{ pseudo_acl }}'

    #
    #  All Finished!
    #